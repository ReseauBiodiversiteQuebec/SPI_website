---
title: "Visualisation"
---
```{r OCCS_init, include = F}
# packages & data
library(knitr)
source("scr/data_n_figures_visual.r")

# ----------------------------
# --- last SPI - distribution
# ----------------------------

last_spi_occ <- sspi_df_occ[sspi_df_occ$YEAR == 2023, ]
last_spi_occ$SPI2 <- round(last_spi_occ$SPI, digits = 3)

# colors
col_pal <- c("#440154FF", "#39568CFF", "#1F968BFF", "#73D055FF")
```

## **Augmentation de la protection de toutes les espèces ciblées au cours des 61 dernières années**
```{r OCCS_SPI_species, echo=F, warnings=F}
#| label: fig-spi_occur
#| fig-cap: "Valeur moyenne et par espèce de l'indice de protection des espèces à partir des données d'occurrence des espèces (n = 503). La courbe bleue représente le SPI moyen, les courbes verte et pourpre représentent les espèces la moins et la plus protégée, respectivement."
#| warning: false
h <- plot_ly(
  type = "scatter",
  x = sspi_df_occ$YEAR[sspi_df_occ$GROUPE == "mean"],
  y = sspi_df_occ$SPI[sspi_df_occ$GROUPE == "mean"],
  text = sspi_df_occ$POPINFOS[sspi_df_occ$GROUPE == "mean"],
  hoverinfo = "text",
  mode = "lines")

for (i in unique(sspi_df_occ$SPECIES[sspi_df_occ$GROUPE == "other"])) {
h <- add_lines(h, 
                 x = sspi_df_occ$YEAR[sspi_df_occ$SPECIES == i],
                 y = sspi_df_occ$SPI[sspi_df_occ$SPECIES == i],
                 text = sspi_df_occ$POPINFOS[sspi_df_occ$SPECIES == i],
                 color = I(rgb(190, 190, 190, alpha = 100, maxColorValue = 255)),
                 name = "Autres")
}

for (i in unique(sspi_df_occ$SPECIES[sspi_df_occ$GROUPE == "max"])) {
h <- add_lines(h, 
                 x = sspi_df_occ$YEAR[sspi_df_occ$SPECIES == i],
                 y = sspi_df_occ$SPI[sspi_df_occ$SPECIES == i],
                 text = sspi_df_occ$POPINFOS[sspi_df_occ$SPECIES == i],
                 color = I(rgb(64, 71, 136, alpha = 100, maxColorValue = 255)),
                 name = "Maximum")
}

for (i in unique(sspi_df_occ$SPECIES[sspi_df_occ$GROUPE == "min"])) {
h <- add_lines(h, 
                 x = sspi_df_occ$YEAR[sspi_df_occ$SPECIES == i],
                 y = sspi_df_occ$SPI[sspi_df_occ$SPECIES == i],
                 text = sspi_df_occ$POPINFOS[sspi_df_occ$SPECIES == i],
                 color = I(rgb(184, 222, 41, alpha = 100, maxColorValue = 255)),
                 name = "Minimum")
}

h <- add_lines(h, 
                x = sspi_df_occ$YEAR[sspi_df_occ$GROUPE == "mean"],
                y = sspi_df_occ$SPI[sspi_df_occ$GROUPE == "mean"],
                text = sspi_df_occ$POPINFOS[sspi_df_occ$GROUPE == "mean"],
                color = I("#238A8DFF"),
                name = "Moyenne")

h |> layout(
    showlegend = F,
    yaxis = list(zeroline = FALSE, title = "SPI"),
    xaxis = list(zeroline = FALSE, title = "Année")
)

h <- h %>% toWebGL()
print(h)
```

## **Valeurs des indices de protection des espèces en 2023**
```{r OCCS_SPI_2023, echo=F, warning = FALSE}
#| label: fig-spi_occ_2023
#| fig-cap: "Valeur de l'indice de protection des espèces en 2023, à partir des données d'occurrences (n = 503)."
#| warning: false

# conversion from species characters to ordered levels of factor for keeping increasing SPI
last_spi_occ$SPECIES2 <- factor(last_spi_occ$SPECIES, levels = last_spi_occ$SPECIES[order(last_spi_occ$SPI, decreasing = FALSE)])

fig <- plot_ly() |>
    add_trace(
        data = last_spi_occ,
        x = ~SPI2,
        y = ~SPECIES2,
        name = "", # remove the "trace 0 " in the popup
        type = "bar",
        orientation = "h",
        color = I(col_pal[4]),
        marker = list(
            line = list(color = "white",
                        width = 0.2)),
        hovertemplate = paste(
            "<b>%{y}</b><br>",
            "<b>SPI</b> = %{x}"
        )
    ) |>
    layout(
        yaxis = list(zeroline = FALSE, title = "Espèce", showticklabels = FALSE),
        xaxis = list(zeroline = FALSE, title = "Indice de protection des espèces"),
        shapes = list(vline(0.17, color = "black"))
    )

fig <- fig %>% toWebGL()
fig
```

## **Etat de la protection des occurrences d'espèce situées au nord vs. au Sud en 2023**  
Les espèces dont les occurrences sont présentent exclusivement dans le Nord (n = `r dim(last_socc_N)[1]`) présentent un SPI moyen de `r round(mean(last_socc_N$SPI_NORTH)*100, digit = 2)`% (sd = `r round(sd(last_socc_N$SPI_NORTH)*100, digit = 2)`%).  
Les espèces dont les occurrences sont présentent uniquement dans le Sud (n = `r dim(last_socc_S)[1]`) présentent un SPI moyen `r round(mean(last_socc_S$SPI_SOUTH)*100, digit=2)`% (sd = `r round(sd(last_socc_S$SPI_SOUTH)*100, digit = 2)`%).  

:::{.panel-tabset}

## Nord
```{r OCC_SPI_2023_N, echo=F, warning = FALSE}
#| label: fig-spi_2023_Nord
#| fig-cap: "Valeur de l'indice de protection des espèces en 2023, à partir des données d'occurrences (n = 503), pour les occurrences d'espèce retrouvées exclusivement dans le nord."
#| warning: false
# conversion from species characters to ordered levels of factor for keeping increasing SPI
last_socc_N$vernacular_fr <- last_socc_N$SPECIES
last_socc_N$group_fr <- "Nord"
last_socc_N$vernacular_fr2 <- factor(last_socc_N$vernacular_fr, levels = last_socc_N$vernacular_fr[order(last_socc_N$SPI_NORTH, decreasing = FALSE)])


fig <- plot_ly() |>
    add_bars(
        data = last_socc_N,
        x = ~SPI_NORTH,
        y = ~vernacular_fr2,
        type = "bar",
        orientation = "h",
        color = ~group_fr,
        colors = col_pal[2],
        hovertemplate = paste(
            "<b>%{y}</b><br>",
            "<b>SPI</b> = %{x}"
        )
    ) |>
    layout(
        showlegend = F,
        yaxis = list(zeroline = FALSE, title = "Espèce", showticklabels = FALSE),
        xaxis = list(zeroline = FALSE, title = "Indice de protection des espèces"),
        shapes = list(vline(0.17, color = "black"))
    )

fig <- fig %>% toWebGL()
fig
```
## Sud

```{r OCC_SPI_2023_S, echo=F, warning = FALSE}
#| label: fig-spi_2023_Sud
#| fig-cap: "Valeur de l'indice de protection des espèces en 2023, à partir des données d'occurrences (n = 503), dont les occurrences d'espèce sont retrouvées exclusivement dans le sud."
#| warning: false
# conversion from species characters to ordered levels of factor for keeping increasing SPI
last_socc_S$vernacular_fr <- last_socc_S$SPECIES
last_socc_S$group_fr <- "Sud"
last_socc_S$vernacular_fr2 <- factor(last_socc_S$vernacular_fr, levels = last_socc_S$vernacular_fr[order(last_socc_S$SPI_SOUTH, decreasing = FALSE)])


fig <- plot_ly() |>
    add_bars(
        data = last_socc_S,
        x = ~SPI_SOUTH,
        y = ~vernacular_fr2,
        type = "bar",
        orientation = "h",
        color = ~group_fr,
        colors = col_pal[3],
        hovertemplate = paste(
            "<b>%{y}</b><br>",
            "<b>SPI</b> = %{x}"
        )
    ) |>
    layout(
        showlegend = F,
        yaxis = list(zeroline = FALSE, title = "Espèce", showticklabels = FALSE),
        xaxis = list(zeroline = FALSE, title = "Indice de protection des espèces"),
        shapes = list(vline(0.17, color = "black"))
    )

fig <- fig %>% toWebGL()
fig
```
## Nord-Sud
```{r RANGES_SPI_2023_NS, echo=F, warning = FALSE}
#| label: fig-spi_2023_NordSud
#| fig-cap: "Valeur de l'indice de protection des espèces en 2023, à partir des données d'occurrences (n = 503), dont les occurrences d'espèce sont retrouvées dans le nord et le sud simultanément."
#| warning: false

# conversion from species characters to ordered levels of factor for keeping increasing SPI
last_socc_NS$vernacular_fr <- last_socc_NS$SPECIES
nord <- last_socc_NS[last_socc_NS$LOC == "Nord",]
nord$vernacular_fr2 <- factor(nord$vernacular_fr, levels = nord$vernacular_fr[order(nord$SPI, decreasing = FALSE)])

sud <- last_socc_NS[last_socc_NS$LOC == "Sud",]
sud$vernacular_fr2 <- factor(sud$vernacular_fr, levels = sud$vernacular_fr[order(sud$SPI, decreasing = FALSE)])

fig_N <- plot_ly() |>
    add_bars(
        data = nord,
        x = ~SPI,
        y = ~vernacular_fr2,
        type = "bar",
        orientation = "h",
        color = ~LOC,
        colors = col_pal[2],
        hovertemplate = paste(
            "<b>%{y}</b><br>",
            "<b>SPI</b> = %{x}"
        )
    )   %>% 
  layout(
        yaxis = list(zeroline = FALSE, title = "Espèce", showticklabels = FALSE),
        xaxis = list(zeroline = FALSE, title = "Indice de protection des espèces"),
        shapes = list(vline(0.17, color = "black"))
    ) 
fig_S <- plot_ly() |>
    add_bars(
        data = sud,
        x = ~SPI,
        y = ~vernacular_fr2,
        type = "bar",
        orientation = "h",
        color = ~LOC,
        colors = col_pal[3],
        hovertemplate = paste(
            "<b>%{y}</b><br>",
            "<b>SPI</b> = %{x}"
        )
    )    %>% 
  layout(
        yaxis = list(zeroline = FALSE, title = "Espèce", showticklabels = FALSE),
        xaxis = list(zeroline = FALSE),
        shapes = list(vline(0.17, color = "black"))
    ) 

fig <- subplot(fig_N, fig_S) 
  
  fig <- fig %>% toWebGL()
fig
```
:::